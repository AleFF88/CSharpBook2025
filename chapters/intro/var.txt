НЕЯВНАЯ ТИПИЗАЦИЯ. КЛЮЧЕВОЕ СЛОВО VAR
var — это не тип, а контекстно-зависимое ключевое слово, позволяющее компилятору самостоятельно определить тип переменной на основе присваиваемого значения.
	var number = 42;        	// int
	var name = "Привет";    	// string
	var list = new List<int>(); // List<int>

Как это работает?
Тип переменной при использовании var определяется на этапе компиляции, и после этого нельзя его изменить. Это строго типизированное поведение, не аналог динамической типизации.

Когда стоит использовать var:
1. Тип очевиден из правой части:
	var age = 30; // Ясно, что это int
2. Тип слишком длинный или громоздкий:
	var orders = new Dictionary<string, List<Order>>();
3. В LINQ-запросах, где результат может быть анонимным типом:
	var result = from p in products
                where p.Price > 100
                select new { p.Name, p.Price };

Из неявной типизации вытекает и особенность использования var. Мы не можем сначала объявить переменную, а потом присвоить ей значение:			
	var digit;			// ошибка компиляции
	digit = 100;
Компилятор должен понимать тип переменной при ее объявлении.
Так же нельзя создать переменную и присвоить ей null, так как null не имеет типа.
	var nothing = null;	// ошибка компиляции

Когда var лучше не использовать:
	Если тип не очевиден для программиста, и это затрудняет чтение:
		var data = GetData(); 	// А что возвращает GetData?
	В коде, который требует ясности и читаемости, особенно при командной разработке.