NULL И ЗНАЧИМЫЕ ТИПЫ
Значимые типы (int, bool, DateTime) хранят значения а не ссылки и не могут быть null по умолчанию. Не существует специального значения "ничего" для значимых типов, нет встроенного способа сказать "значения нет". 

Если нам все же надо задать значение null для значимого типа, то мы можем сделать этот типа nullable.
	int? x = null; // допустимо

По сути запись int? это синтаксический сахар:
	int? age = null; // то же самое, что Nullable<int> age = null;

Как устроен Nullable<T> под капотом?
Это структура, которая содержит два поля:
	public struct Nullable<T> where T : struct{
		private bool hasValue;
		private T value;
	}
Где:
	hasValue — флаг, указывающий, есть ли значение.
	value — само значение, если оно есть.
Если HasValue == false, попытка получить Value вызовет исключение InvalidOperationException.

Хотя Nullable<T> — это структура, она по-прежнему размещается в стеке, как и обычные значимые типы, но содержит дополнительную информацию о наличии значения.